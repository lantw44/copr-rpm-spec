From 951f5cca43676dbdde2f5c01118bce63905f7444 Mon Sep 17 00:00:00 2001
From: Ting-Wei Lan <lantw44@gmail.com>
Date: Wed, 17 Feb 2021 21:53:27 +0800
Subject: [PATCH 1/2] Revert "git-download: Don't verify X.509 certificate of
 SWH."

This reverts commit a7696b9733d4ede9817a0a0accb5ce5b85d9a2d3.
---
 guix/git-download.scm | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/guix/git-download.scm b/guix/git-download.scm
index 8e575e3b5f..1267986fe8 100644
--- a/guix/git-download.scm
+++ b/guix/git-download.scm
@@ -131,11 +131,9 @@ HASH-ALGO (a symbol).  Use NAME as the file name, or a generic name if #f."
                 (download-nar #$output)
 
                 ;; As a last resort, attempt to download from Software Heritage.
-                ;; Disable X.509 certificate verification to avoid depending
-                ;; on nss-certs--we're authenticating the checkout anyway.
                 ;; XXX: Currently recursive checkouts are not supported.
                 (and (not recursive?)
-                     (parameterize ((%verify-swh-certificate? #f))
+                     (begin
                        (format (current-error-port)
                                "Trying to download from Software Heritage...~%")
                        (swh-download (getenv "git url") (getenv "git commit")
-- 
2.29.2


From bf6def8cc3bf569a93cb66dd76f0b78f06ed393b Mon Sep 17 00:00:00 2001
From: Ting-Wei Lan <lantw44@gmail.com>
Date: Wed, 17 Feb 2021 21:53:28 +0800
Subject: [PATCH 2/2] Revert "swh: Allow callers to disable X.509 certificate
 verification."

This reverts commit 722ad41c44a499d2250c79527ef7d069ca728de0.
---
 guix/swh.scm | 34 +++++++++-------------------------
 1 file changed, 9 insertions(+), 25 deletions(-)

diff --git a/guix/swh.scm b/guix/swh.scm
index 0b765cc743..d9f7d6f508 100644
--- a/guix/swh.scm
+++ b/guix/swh.scm
@@ -34,7 +34,6 @@
   #:use-module (ice-9 popen)
   #:use-module ((ice-9 ftw) #:select (scandir))
   #:export (%swh-base-url
-            %verify-swh-certificate?
             %allow-request?
 
             request-rate-limit-reached?
@@ -126,10 +125,6 @@
   ;; Presumably we won't need to change it.
   (make-parameter "https://archive.softwareheritage.org"))
 
-(define %verify-swh-certificate?
-  ;; Whether to verify the X.509 HTTPS certificate for %SWH-BASE-URL.
-  (make-parameter #t))
-
 (define (swh-url path . rest)
   ;; URLs returned by the API may be relative or absolute. This has changed
   ;; without notice before. Handle both cases by detecting whether the path
@@ -147,13 +142,6 @@
       url
       (string-append url "/")))
 
-;; XXX: Work around a bug in Guile 3.0.2 where #:verify-certificate? would
-;; be ignored (<https://bugs.gnu.org/40486>).
-(define* (http-get* uri #:rest rest)
-  (apply http-request uri #:method 'GET rest))
-(define* (http-post* uri #:rest rest)
-  (apply http-request uri #:method 'POST rest))
-
 (define %date-regexp
   ;; Match strings like "2014-11-17T22:09:38+01:00" or
   ;; "2018-09-30T23:20:07.815449+00:00"".
@@ -190,7 +178,7 @@ Software Heritage."
 
 (define %allow-request?
   ;; Takes a URL and method (e.g., the 'http-get' procedure) and returns true
-  ;; to keep going.  This can be used to disallow requests when
+  ;; to keep going.  This can be used to disallow a requests when
   ;; 'request-rate-limit-reached?' returns true, for instance.
   (make-parameter (const #t)))
 
@@ -206,7 +194,7 @@ Software Heritage."
     (string->uri url))
 
   (define reset-time
-    (if (and (eq? method http-post*)
+    (if (and (eq? method http-post)
              (string-prefix? "/api/1/origin/save/" (uri-path uri)))
         %save-rate-limit-reset-time
         %general-rate-limit-reset-time))
@@ -219,23 +207,21 @@ RESPONSE."
   (let ((uri (string->uri url)))
     (match (assq-ref (response-headers response) 'x-ratelimit-reset)
       ((= string->number (? number? reset))
-       (if (and (eq? method http-post*)
+       (if (and (eq? method http-post)
                 (string-prefix? "/api/1/origin/save/" (uri-path uri)))
            (set! %save-rate-limit-reset-time reset)
            (set! %general-rate-limit-reset-time reset)))
       (_
        #f))))
 
-(define* (call url decode #:optional (method http-get*)
+(define* (call url decode #:optional (method http-get)
                #:key (false-if-404? #t))
   "Invoke the endpoint at URL using METHOD.  Decode the resulting JSON body
 using DECODE, a one-argument procedure that takes an input port.  When
 FALSE-IF-404? is true, return #f upon 404 responses."
   (and ((%allow-request?) url method)
        (let*-values (((response port)
-                      (method url #:streaming? #t
-                              #:verify-certificate?
-                              (%verify-swh-certificate?))))
+                      (method url #:streaming? #t)))
          ;; See <https://archive.softwareheritage.org/api/#rate-limiting>.
          (match (assq-ref (response-headers response) 'x-ratelimit-remaining)
            (#f #t)
@@ -480,7 +466,7 @@ directory entries; if it has type 'file, return its <content> object."
 (define* (save-origin url #:optional (type "git"))
   "Request URL to be saved."
   (call (swh-url "/api/1/origin/save" type "url" url) json->save-reply
-        http-post*))
+        http-post))
 
 (define-query (save-origin-status url type)
   "Return the status of a /save request for URL and TYPE (e.g., \"git\")."
@@ -502,7 +488,7 @@ directory entries; if it has type 'file, return its <content> object."
 to the vault.  Return a <vault-reply>."
   (call (swh-url "/api/1/vault" (symbol->string kind) id)
         json->vault-reply
-        http-post*))
+        http-post))
 
 (define* (vault-fetch id kind
                       #:key (log-port (current-error-port)))
@@ -521,10 +507,8 @@ revision, it is a gzip-compressed stream for 'git fast-import'."
          ('done
           ;; Fetch the bundle.
           (let-values (((response port)
-                        (http-get* (swh-url (vault-reply-fetch-url reply))
-                                   #:streaming? #t
-                                   #:verify-certificate?
-                                   (%verify-swh-certificate?))))
+                        (http-get (swh-url (vault-reply-fetch-url reply))
+                                  #:streaming? #t)))
             (if (= (response-code response) 200)
                 port
                 (begin                            ;shouldn't happen
-- 
2.29.2

