From 22cd5f5f9f8af1f343e9fa747c03fc79667a60ea Mon Sep 17 00:00:00 2001
From: Raphael Kubo da Costa <raphael.kubo.da.costa@intel.com>
Date: Tue, 05 Mar 2019 11:11:51 +0100
Subject: [PATCH] quic: Make QuicCryptoStream::substreams_ a std::unique_ptr

This works around https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63707, which
was causing the GCC build to fail since commit 167db3e68 ("Landing Recent
QUIC changes until 8:59 AM, Feb 26, 2019 UTC-5"):

../../net/third_party/quic/core/quic_crypto_stream.cc: In constructor ‘quic::QuicCryptoStream::QuicCryptoStream(quic::QuicSession*)’:
../../net/third_party/quic/core/quic_crypto_stream.cc:33:52: error: use of deleted function ‘quic::QuicCryptoStream::CryptoSubstream::CryptoSubstream(quic::QuicCryptoStream::CryptoSubstream&&)’
                   {this, ENCRYPTION_FORWARD_SECURE}} {
                                                    ^
In file included from ../../net/third_party/quic/core/quic_crypto_stream.cc:5:
../../net/third_party/quic/core/quic_crypto_stream.h:152:10: note: ‘quic::QuicCryptoStream::CryptoSubstream::CryptoSubstream(quic::QuicCryptoStream::CryptoSubstream&&)’ is implicitly deleted because the default definition would be ill-formed:
   struct CryptoSubstream {
          ^~~~~~~~~~~~~~~
../../net/third_party/quic/core/quic_crypto_stream.h:152:10: error: use of deleted function ‘quic::QuicStreamSendBuffer::QuicStreamSendBuffer(quic::QuicStreamSendBuffer&&)’
In file included from ../../net/third_party/quic/core/quic_stream.h:27,
                 from ../../net/third_party/quic/core/quic_crypto_stream.h:15,
                 from ../../net/third_party/quic/core/quic_crypto_stream.cc:5:
../../net/third_party/quic/core/quic_stream_send_buffer.h:63:3: note: declared here
   QuicStreamSendBuffer(QuicStreamSendBuffer&& other) = delete;
   ^~~~~~~~~~~~~~~~~~~~

The code is actually correct, but that GCC bug causes the initialization to
fail. Work around it by making |substreams_| a std::unique_ptr so we can
initialize it via operator new[] instead.

Bug: 819294, 937886
Change-Id: If56f2a12a733e6f6680ed9c9e6f7688439e9d216
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1503254
---

diff --git a/net/third_party/quic/core/quic_crypto_stream.cc b/net/third_party/quic/core/quic_crypto_stream.cc
index eb58f53..6ee344e 100644
--- a/net/third_party/quic/core/quic_crypto_stream.cc
+++ b/net/third_party/quic/core/quic_crypto_stream.cc
@@ -28,9 +28,10 @@
                  session,
                  /*is_static=*/true,
                  BIDIRECTIONAL),
-      substreams_{{this, ENCRYPTION_NONE},
-                  {this, ENCRYPTION_ZERO_RTT},
-                  {this, ENCRYPTION_FORWARD_SECURE}} {
+      substreams_(new CryptoSubstream[NUM_ENCRYPTION_LEVELS]{
+          {this, ENCRYPTION_NONE},
+          {this, ENCRYPTION_ZERO_RTT},
+          {this, ENCRYPTION_FORWARD_SECURE}}) {
   // The crypto stream is exempt from connection level flow control.
   DisableConnectionFlowControlForThisStream();
 }
diff --git a/net/third_party/quic/core/quic_crypto_stream.h b/net/third_party/quic/core/quic_crypto_stream.h
index 132751a..b13768c 100644
--- a/net/third_party/quic/core/quic_crypto_stream.h
+++ b/net/third_party/quic/core/quic_crypto_stream.h
@@ -6,6 +6,7 @@
 #define NET_THIRD_PARTY_QUIC_CORE_QUIC_CRYPTO_STREAM_H_
 
 #include <cstddef>
+#include <memory>
 
 #include "base/macros.h"
 #include "net/third_party/quic/core/crypto/crypto_framer.h"
@@ -169,7 +170,9 @@
 
   // Keeps state for data sent/received in CRYPTO frames at each encryption
   // level.
-  CryptoSubstream substreams_[NUM_ENCRYPTION_LEVELS];
+  // N.B.: We are using a std::unique_ptr here only due to
+  // https://crbug.com/937886.
+  std::unique_ptr<CryptoSubstream[]> substreams_;
 };
 
 }  // namespace quic
