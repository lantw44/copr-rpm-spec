diff -up chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_ptr_info.h.boolfix chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_ptr_info.h
--- chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_ptr_info.h.boolfix	2018-03-15 13:07:54.999428755 -0400
+++ chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_ptr_info.h	2018-03-15 13:08:21.270794252 -0400
@@ -45,7 +45,7 @@ class AssociatedInterfacePtrInfo {
 
   bool is_valid() const { return handle_.is_valid(); }
 
-  explicit operator bool() const { return handle_; }
+  explicit operator bool() const { return (bool) handle_; }
 
   ScopedInterfaceEndpointHandle PassHandle() {
     return std::move(handle_);
diff -up chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_request.h.boolfix chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_request.h
--- chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_request.h.boolfix	2018-03-15 13:07:09.680523296 -0400
+++ chromium-65.0.3325.162/mojo/public/cpp/bindings/associated_interface_request.h	2018-03-15 13:07:44.429684037 -0400
@@ -50,7 +50,7 @@ class AssociatedInterfaceRequest {
   // handle.
   bool is_pending() const { return handle_.is_valid(); }
 
-  explicit operator bool() const { return handle_; }
+  explicit operator bool() const { return (bool) handle_; }
 
   ScopedInterfaceEndpointHandle PassHandle() { return std::move(handle_); }
 
diff -up chromium-65.0.3325.162/mojo/public/cpp/bindings/interface_request.h.boolfix chromium-65.0.3325.162/mojo/public/cpp/bindings/interface_request.h
--- chromium-65.0.3325.162/mojo/public/cpp/bindings/interface_request.h.boolfix	2018-03-15 13:08:33.494499025 -0400
+++ chromium-65.0.3325.162/mojo/public/cpp/bindings/interface_request.h	2018-03-15 13:10:39.218462546 -0400
@@ -54,7 +54,7 @@ class InterfaceRequest {
   // Indicates whether the request currently contains a valid message pipe.
   bool is_pending() const { return handle_.is_valid(); }
 
-  explicit operator bool() const { return handle_; }
+  explicit operator bool() const { return (bool) handle_; }
 
   // Removes the message pipe from the request and returns it.
   ScopedMessagePipeHandle PassMessagePipe() { return std::move(handle_); }
